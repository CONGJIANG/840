## Using the new weights that: 
$w_{11} = \pi_0\eta_0; w_{10} = \pi_0\eta_1; w_{0} = \pi_1\eta_0\eta_1$

```{r}
alpha0 <- c(-2, -1, 0, 1,2)
alpha1 <- c(-2, -1, 0, 1,2)

psi0 <-c(-1, -.1, 0, .1, 1)
psi1 <-c(-1, -.1, 0, .1, 1)
psi2 <-c(-.5, 0, .5)
beta <- c(-1, -.5, 0, .5, 1)

set.seed(1)
m <-1000  # m replications
n <-1000
Psi58 <- matrix(0, nrow = m, ncol =7)
decision <- matrix(0, nrow = n, 3)
for (j in 1:m) {
  X1 <- rnorm(n)
  X12 <- X1^2
  A1 <- rbinom(n, 1, expit( alpha0[3] + alpha1[2]*X1))
  h <- rbinom(n, 1, expit(X1))
  ## for Y
  gamma1 <- A1 * (psi0[5] + psi1[5]*X1 + psi2[3]*h + psi2[3]*X1*h)
  Y <- beta[1] + beta[2]*X1 + beta[5]*(X12) + gamma1
  ### Treatment model

  treat.mod <- glm(A1~X1, family = 'binomial')
  
  H.treat.mod <- glm(h~X1, family = 'binomial')

  w <- ifelse(A1 == 0, fitted(treat.mod)*fitted(H.treat.mod)*(1-fitted(H.treat.mod)), ifelse(h == 1, (1-fitted(treat.mod))*(1-fitted(H.treat.mod)), (1-fitted(treat.mod)) * fitted(H.treat.mod)) )
  # w1 <- ((A1*(1/fitted(treat.mod))) + (1-A1)*(1/(1 - fitted(treat.mod)))) * ((h*(1/fitted(H.treat.mod))) + (1-h)*(1/(1 - fitted(H.treat.mod))))
  # w2 = abs(A1 - fitted(treat.mod)) * ifelse(h == 1, 1/(fitted(H.treat.mod)), 1/(1 - fitted(H.treat.mod)))

  # outcome model/regression:
  fit <- lm(Y ~ X1 + A1 + I(A1*X1) + I(A1*h) + I(A1*h*X1), weights = w)
  # outcome model/regression:
  # fit <- lm(Y ~ X1 + h + I(X1 * h) +  A1 + I(A1*X1) + I(A1*h) + I(A1*X1*h) , weights = abs(A1 - fitted(treat.mod)))
  
  Psi58[j,1:6] <- as.vector(fit$coefficients)
  
  

  decision[,1] <- psi0[5] + psi1[5]*X1 + psi2[3]*h + psi2[3]*X1*h
  decision[,2] <- fit$coefficients[3] + fit$coefficients[4]*X1 + fit$coefficients[5]*h + fit$coefficients[6]*X1*h
  decision[,3] <- sign(decision[,1] )==sign(decision[,2])
  prop <- sum(decision[,3])/n
  Psi58[j,7] <- prop
}
colnames(Psi58) <- c("beta0", "beta 1", "psi0", "psi1","psi2", "psi3","correct ratio")
Psi58[1:10,]

```


```{r}
apply(Psi58, 2, mean)
proph <- apply(Psi58, 2, mean)[7]
proph
boxplot(Psi58[,3], Psi58[,4], Psi58[,5], Psi58[,6],  names=c("Psi0", "Psi1", "Psi2", "Psi3") )
abline(h = 1, col = "green")
abline(h = .5, col = "red") 
```
